/*
    Copyright (c) 2020 Behemehal. See license file for details
*/
import "string.ei";
import "int.ei";
import "void.ei";
import "function.ei";

@version = "1.0.0";
@description = "Ellie array";
@notConstructable = true;
@dont_fix_variant=true;
pub class array<Type> {
    @description = "Get type";
    @example = "
        v arr = [12];
        print(arr.getType()); //array
    ";
    pub fn getType() : string {
        ret "array";
    }

    @description = "Get size of array";
    @native=true;
    @example = "
        v arr = [12];
        print(arr.len()); //1
    ";
    pub fn len() : int;

    @description = "Get element at index";
    @native=true;
    @example = "
        v arr = [12];
        print(arr.get(0)); //12
    ";
    pub fn get(index : int) : Type;

    @description = "Set element at index";
    @native=true;
    @example = "
        v arr = [12];
        arr.set(0, 13);
        print(arr.get(0)); //13
    ";
    pub fn set(index : int, value : Type);

    @desctription = "Get heap address of array";
    pub fn heap_position() : int;

    @description = "Unallocate array (This function is extremely dangerous)";
    @native=true;
    @example = "
        v arr = [12, 2, 3, 4];
        arr.unallocate();
    ";
    pub fn unallocate();


    @description = "Check if array is empty";
    @native=true;
    @example = "
        v arr = [];
        print(arr.is_empty()); //true
    ";
    pub fn is_empty();
}